 /*
 NAME: ABHISHEK
 ASSIGNMENT NO: 2
Implement a class Complex which represents the Complex Number data type.
Implement the following operations:
1. Constructor (including a default constructor which creates the complex number 0+0i).
2. Overloaded operator+ to add two complex numbers.
3. Overloaded operator* to multiply two complex numbers.
4. Overloaded << and >> to print and read Complex Numbers.
*/

#include<iostream>                
using namespace std;               

class complex                     
{
 public:
 float real,img;          


        complex()              
{
}
        complex operator+ (complex);
        complex operator* (complex);
        friend ostream &operator<<(ostream &,complex&);
        friend istream &operator<<(istream &,complex&);
};

 complex complex:: operator + (complex obj)
{
 complex temp;
 temp.real=real+obj.real;
 temp.img=img+obj.img;
 return (temp);
}
 istream &operator >> (istream &in,complex &obj)
{
 in>>obj.real;
 in>>obj.img;
 return in;
}
 ostream &operator<<(ostream &out,complex &obj)
{

 out<<obj.real<<"+"<<obj.img<<"i";
 return out;
}
 complex complex :: operator * (complex obj)
{
   complex temp;
        temp.real=real * obj.real;
            temp.img=img * obj.img;
        return (temp);
}


int main()
{
 complex a,b,c,d;
  cout<<"\nEnter first complex number\n";
  cout<<"\nEnter real and imaginary:\t";
 cin>>a;
 cout<<"Enter second complex number \n";
 cout<<"\nEnter real and imaginary:\t";
 cin>>b;
 cout<<"\nArithmetic operations"<<endl;
 c=a+b;
 cout<<"\nAddition =";
 cout<<c;
 d=a*b;
 cout<<"\nMultiplication=";
 cout<<d;
 cout<<endl;
 return 0;

}
